#include <stdio.h>
#include <ctype.h>
#include <string.h>

#define ALPHABET_SIZE 26

void encrypt(char *plaintext, char *key) {
    int keyLen = strlen(key);
    int i, j;

    for (i = 0; plaintext[i] != '\0'; i++) {
        if (isalpha(plaintext[i])) {
            char base = islower(plaintext[i]) ? 'a' : 'A';
            int shift = tolower(key[i % keyLen]) - 'a';

            plaintext[i] = ((tolower(plaintext[i]) - base + shift) % ALPHABET_SIZE) + base;
        }
    }
}

void decrypt(char *ciphertext, char *key) {
    int keyLen = strlen(key);
    int i, j;

    for (i = 0; ciphertext[i] != '\0'; i++) {
        if (isalpha(ciphertext[i])) {
            char base = islower(ciphertext[i]) ? 'a' : 'A';
            int shift = tolower(key[i % keyLen]) - 'a';

            int decryptedChar = tolower(ciphertext[i]) - base - shift;
            if (decryptedChar < 0)
                decryptedChar += ALPHABET_SIZE;

            ciphertext[i] = (decryptedChar % ALPHABET_SIZE) + base;
        }
    }
}

int main() {
    char plaintext[100], key[100], ciphertext[100];

    printf("Enter plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);

    printf("Enter key: ");
    fgets(key, sizeof(key), stdin);

    
    plaintext[strcspn(plaintext, "\n")] = '\0';
    key[strcspn(key, "\n")] = '\0';

    
    strcpy(ciphertext, plaintext);
    encrypt(ciphertext, key);
    printf("Encrypted text: %s\n", ciphertext);

    
    decrypt(ciphertext, key);
    printf("Decrypted text: %s\n", ciphertext);

    return 0;
}
