#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#define ALPHABET_SIZE 26

// Function to calculate letter frequencies in the ciphertext
void calculateFrequencies(char *ciphertext, int frequencies[]) {
    for (int i = 0; i < strlen(ciphertext); i++) {
        if (isalpha(ciphertext[i])) {
            int index = tolower(ciphertext[i]) - 'a';
            frequencies[index]++;
        }
    }
}

// Function to decrypt the ciphertext using a given key
void decrypt(char *ciphertext, char *key, char *plaintext) {
    for (int i = 0; i < strlen(ciphertext); i++) {
        if (isalpha(ciphertext[i])) {
            char base = islower(ciphertext[i]) ? 'a' : 'A';
            plaintext[i] = key[ciphertext[i] - base];
        } else {
            plaintext[i] = ciphertext[i];
        }
    }
    plaintext[strlen(ciphertext)] = '\0';
}

// Function to find the index of the most frequent letter in the ciphertext
int findMostFrequentIndex(int frequencies[]) {
    int maxIndex = 0;
    for (int i = 1; i < ALPHABET_SIZE; i++) {
        if (frequencies[i] > frequencies[maxIndex]) {
            maxIndex = i;
        }
    }
    return maxIndex;
}

// Function to perform the letter frequency attack and decrypt the ciphertext
void performFrequencyAttack(char *ciphertext, char *plaintext) {
    char key[ALPHABET_SIZE + 1] = {0};
    int frequencies[ALPHABET_SIZE] = {0};
    calculateFrequencies(ciphertext, frequencies);

    // Define the English letter frequencies
    char englishFrequencies[] = "etaoinshrdlcumwfgypbvkjxqz";

    // Sort the key based on the letter frequencies in the ciphertext
    for (int i = 0; i < ALPHABET_SIZE; i++) {
        int maxIndex = findMostFrequentIndex(frequencies);
        key[maxIndex] = englishFrequencies[i];
        frequencies[maxIndex] = 0; // Set the frequency to 0 to avoid duplicate
    }

    // Decrypt the ciphertext using the key
    decrypt(ciphertext, key, plaintext);
}

int main() {
    char ciphertext[] = "53‡‡†305))6*;4826)4‡.)4‡);806*;48†8¶60))85;;]8*;:‡*8†83(88)5*†;46(;88*96*?;8)*‡(;485);5*†2:*‡(;4956*2(5*—4)8¶8*;4069285);)6†8)4‡‡;1(‡9;48081;8:8‡1;48†85;4)485†528806*81(‡9;48;(88;4(‡?34;48)4‡;161;:188;‡?;";
    char plaintext[strlen(ciphertext) + 1];

    // Perform the letter frequency attack and decrypt the ciphertext
    performFrequencyAttack(ciphertext, plaintext);

    // Print the decrypted plaintext
    printf("Decrypted plaintext:\n%s\n", plaintext);

    return 0;
}
